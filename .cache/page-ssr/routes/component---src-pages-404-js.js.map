{"version":3,"file":"component---src-pages-404-js.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"404: Not Found\" />\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["React","Link","Layout","location","title","children","rootPath","isRootPath","pathname","header","Date","getFullYear","PropTypes","Helmet","Seo","description","lang","meta","site","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","concat","defaultProps","propTypes","string","arrayOf","object","isRequired","NotFoundPage","data","siteTitle","pageQuery"],"sourceRoot":""}